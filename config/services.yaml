# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    uploads_directory: '%kernel.project_dir%/public/uploads'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    form_authenticator:
        class: App\Security\LoginFormAuthenticator
        arguments: ['@router', '@security.password_encoder']
        public: true

    password_hasher:
        class: App\Listeners\PasswordListener
        arguments: ['@security.password_encoder']
        tags:
            - {name: doctrine.event_subscriber}

    App\Form\Type\RegistrationType:
        arguments: ['@request_stack']
        tags: [form.type]

    App\Listeners\CommentListener:
        tags:
            - {name: doctrine.event_subscriber}

    App\Listeners\RatingListener:
        tags:
            - {name: doctrine.event_subscriber}

    App\Listeners\RegistrationDataListener:
        tags:
            - {name: doctrine.event_subscriber}

    app.user_to_username_transformer:
        class: App\Form\DataTransformer\UserToUsernameTransformer
        arguments: ['@doctrine']

    fos_user.user_to_username_transformer:
        alias: app.user_to_username_transformer

    security.authentication.guard_handler:
        class: Symfony\Component\Security\Guard\GuardAuthenticatorHandler
        public: true

    app.form.type.username:
        class: App\Form\Type\UsernameFormType
        arguments: ['@app.user_to_username_transformer']
        tags:
            - { name: form.type }

    app.thread_manager:
        class: App\EntityManager\ThreadManager
        arguments: ['@doctrine.orm.entity_manager', App\Entity\Thread,
         App\Entity\ThreadMetadata, '@fos_message.message_manager']

    fos_message.thread_manager:
        alias: app.thread_manager
        public: true


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
